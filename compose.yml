services:
  server:
    env_file: .env
    environment:
      - POSTGRES_HOST=psql 
      - REDIS_HOST=redis 
    build:
      dockerfile: ./Dockerfile
      target: server
    container_name: server
    restart: unless-stopped
    ports:
      - ${PORT}:8080
    depends_on:
      psql:
        condition: service_healthy
      redis:
        condition: service_healthy

  psql:
    image: postgres:alpine
    env_file: .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - psql_volume:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
        ]
      interval: 1s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    env_file: .env
    container_name: redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    ports:
      - ${REDIS_PORT}:6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  psql_volume:
    driver: local
  redis-data:
    driver: local
